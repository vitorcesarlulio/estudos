# Guia MySQLDump
	https://snapshooter.com/learn/mysqldump-ultimate-guide

# Verificar Backup
	Script linha por linha para checar tabelas
		SELECT CONCAT('CHECK TABLE ',dbtb,';') FROM
		(SELECT CONCAT(table_schema,'.',table_name) dbtb FROM
		information_schema.tables WHERE table_schema NOT IN
		('information_schema','performance_schema','mysql')) A;
	
	Script linha unica para checar tabelas
		SET SESSION group_concat_max_len = 10000; //para que em uma unica linha saia todas as tabelas 
		SELECT CONCAT('CHECK TABLE ',dbtblist,';') FROM
		(SELECT GROUP_CONCAT(table_schema,'.',table_name) dbtblist FROM
		information_schema.tables WHERE table_schema NOT IN
		('information_schema','performance_schema','mysql')) A;
		
		Exemplo: " CHECK TABLE ayman.articles,ayman.topics,test.nuoji,test.prod,test.prodcat; "
		
		MYSQL_USER=root
		MYSQL_PASS=rootpass
		MYSQL_CONN="-u${MYSQL_USER} -p${MYSQL_PASS}"
		SQL="SET SESSION group_concat_max_len = 1048576;"
		SQL="${SQL} SELECT CONCAT('CHECK TABLE ',dbtblist,';') FROM"
		SQL="${SQL} (SELECT GROUP_CONCAT(table_schema,'.',table_name) dbtblist FROM"
		SQL="${SQL} information_schema.tables WHERE table_schema NOT IN"
		SQL="${SQL} ('information_schema','performance_schema','mysql')) A"
		mysql ${MYSQL_CONN} -ANe"${SQL}" | mysql ${MYSQL_CONN}

	gzip -t /backup/mysql/TODAY_DATE.tar.gz # Para verificação de integridade gzip


# Alternativa segura ao uso de uma senha do MySQL na linha de comando
	Ao inves de fazer isso:
		mysqldump -uroot --password=mycleartextpass mydatabase > dumpfile.sql
		
	Podemos fazer isso:
		shell> mysqldump --login-path=localhostbackup mydatabase > dumpfile.sql
		
		Onde o parâmetro --login-path deve ser definido pelo seguinte comando
		
		shell> mysql_config_editor set --login-path=localhostbackup --host=127.0.0.1 --user=ROOT --password=PASS 
		(SE N DER CERTO TIRE O = e rode sem senha, ai é para ele pedir a senha e vai criar esse alias)
		
		mysql_config_editor print --all
		
		Você pode usar diferentes caminhos de login para diferentes contas e / ou hosts, conforme desejar. Boa ideia se você me perguntar.


# senhas em scripts
	1) Variáveis
	Você pode usar a variável MYSQL_PWD para armazenar uma senha de conexão com o banco. Exemplo:
	
	export MYSQL_PWD=mypassword
	mysql -h127.0.0.1 -uuser -e "show processlist"
	
	2) Arquivo adicional de configuração
	Outra opção interessante é criar um arquivo .my.cnf com os parâmetros de conexão com o banco e guardá-lo em sua pasta de usuário. Exemplo:
	
	[client]
	host=127.0.0.1
	user=myuser
	password=mypassword
	Lembre-se de dar permissão de acesso a esse arquivo somente para o seu usuário:
	
	chmod 600 .my.cnf
	Feito isso, quando necessário executar o mysql, basta informar as credenciais de conexão do seu arquivo:
	
	mysql --defaults-extra-file=.my.cnf -e "show processlist"
	Atenção: Lembre-se sempre de rever as permissões do usuário do MySQL que executará scripts. Evite sempre dar privilégios a mais e assim você poderá evitar grandes tragédias :)

https://marquesfernandes.com/desenvolvimento/mysql-criando-rotinas-de-backups-no-windows-e-linux/

https://www.redolive.com/automated-mysql-backup-for-windows/