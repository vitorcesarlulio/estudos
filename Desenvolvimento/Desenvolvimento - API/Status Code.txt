https://www.youtube.com/watch?v=3AIj-Q3iocQ

HTTP é connection 
	Quando você client, envia para servidor algum request, ele vai processar essa informação e independente da ação do client ele devolverá uma resposta.
	Enviei um formulário e fechei o navegador, independente disso, o servidor vai me devolver um response
	
	Status code são separados por categorias
	Tudo depende do cenário
		Imagine um que a segurança fala mais alto, autenticação, a parte publica da API nunca deve retornar 404
		Sempre retorna um 200 Ok, se eu for recuperar uma senha independente se existe ou não o usuário no banco de dados ele tem que falar que enviou um e-mail de recuperação para o e-mail informado
		Mas ai eu tenho uma brecha restful, porem eu não posso deixar a brecha para o atacante saber que não existe aquele usuário
		O intuito do restful é padronizar as chamas, padronizar a api
		
		2xx - Sucesso
			200 - Ok
				Sucesso, resposta para GET e DELETE
			201 - Created
				Indica que um recurso foi criado
				Utilizado para resposta do post
				é retorne o header location o caminho do cat para obter os detalhes desse recurso
				que ai por exemplo, um usuário que você criou, para encontrar ele você tem que comunicar com end-point do location
			204 - No content
				Request processado com sucesso mas nenhum conteúdo para ser retornado
				geralmente em PUT e PATCH
				E também para situações em que o GET não retornou resultados
				
				Geralmente utilizado quando a raiz da requisição existe mas depois não tem mais nada
				o usuário existe mas não tem nenhuma compra
				
			202 - Accepted
				O servidor aceitou o request
				Ótimo para processo assíncronos
				Fazer o upload de uma planilha que será processado em background
				ai ficaria consultando o status desse processamento 
		3xx - Redirecionamento
			302 
				Geralmente utilizado em des. fornt end
				On SPA
			301 - Moved Permanently
				Indica que foi permanentemente redirecionado para um novo endereço
		4xx - Erro no client (no navegador imagine assim)
			Categoria de erros no client, cometeu uma falha na requisição
			Como "dev" "não tenho que fazer nada"
			
			400 - Bad Request
				A solicitação não foi processada pois o servidor não entendeu o que o client solicitou
				Falta de um campo
			401 - Unauthorized
				Client não está autenticado
				E não tem autorização para acessar o recurso
			403 - Forbidden
				Indica que o client está autenticado e a requisição em tese é valida
				Porem o client não tem permissão para acessar o recurso
			429 - Too Many Requests
				Passou do limite de requisição
			404 - Not Found
				O recurso não foi localizado
				Geralmente utilizado quando a raiz da requisição não existe
				O usuário não existe e meu intuito era buscar as compras dele
				
			Problemn details
				RFC 7807 que defini um padrão para mensagens de erro
				é uma maneira de transportar detalhes legíveis em uma resposta HTTP para evitar a necessidade de definir novos formatos de resposta
		5xx - Erro no server
			Aqui ferrou para "dev"
			500 - Falha no servidor
				não conseguiu processar a requisição
			503 - Indisponível
				Cenário comum em ataques ddos
				sobrecarrega de requisição e não consegue processar mais nada